name: API tests

# когда будет запускаться данный workflow
on:
  push:
    branches:
      - main  # Запускать workflow, когда будет сделан коммит в ветку main
  pull_request:
    branches:
      - main  # Запускать workflow, когда будет сделан pull request в ветку main

# шаги, которые должны быть выполнены в рамках работы с тестами
jobs:
  run-tests:
    runs-on: ubuntu-latest  # тесты будут запускаться на последней версии Ubuntu

    steps:
      - name: Check out repository
        uses: actions/checkout@v5  # GitHub Action для клонирования репозитория

      - name: Set up Python
        uses: actions/setup-python@v6  # GitHub Action для установки Python
        with:
          python-version: '3.13'

      - name: Clone test server repository
        run: git clone https://github.com/Nikita-Filonov/qa-automation-engineer-api-course.git

      - name: Install test server dependencies
        run: pip install -r qa-automation-engineer-api-course/requirements.txt

      - name: Start a test server
        env: # Запуск тестового сервера с необходимыми переменными окружения
          APP_HOST: "http://localhost:8000"
          DATABASE_URL: "sqlite+aiosqlite:///./local.db"
          JWT_ALGORITHM: "HS256"
          JWT_SECRET_KEY: "qa-automation-engineer-api-course-secret-key"
          JWT_ACCESS_TOKEN_EXPIRE: 1800
          JWT_REFRESH_TOKEN_EXPIRE: 5184000
        run: uvicorn main:app --host 0.0.0.0 --port 8000 --app-dir ./qa-automation-engineer-api-course &

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run API tests with pytest and generate Allure results
        run: |
          pytest -m regression --alluredir=allure-results

      - name: Upload 'allure-results' directory
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results
          path: allure-results

  publish-report:
    runs-on: ubuntu-latest
    needs: run-tests

    steps:
      - name: Get Allure history
        uses: actions/checkout@v5
        if: always()  # выполняется независимо от успеха или неудачи предыдущих шагов
        continue-on-error: true  # Если здесь возникнет ошибка, workflow всё равно продолжит выполнение
        with:
          ref: gh-pages  # ветка gh-pages для получения отчётов
          path: gh-pages  # путь для сохранения отчётов

      - name: Download 'allure-results' directory
        uses: actions/download-artifact@v5
        with:
          name: allure-results
          path: allure-results-download

      - name: Generate Allure Report with history
        uses: simple-elf/allure-report-action@v1.13 # готовое решение из GitHub Marketplace для генерации Allure отчёта
        if: always()
        with:
          allure_results: allure-results-download  # каталог с результатами тестов
          allure_history: allure-history  # каталог с результатами тестов
          gh_pages: gh-pages

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4  # GitHub Action для публикации отчёта на GitHub Pages
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Токен для аутентификации на GitHub
          publish_branch: gh-pages  # отчёт будет опубликован в ветке gh-pages
          publish_dir: allure-history  # папка, которая будет опубликована на GitHub Pages
